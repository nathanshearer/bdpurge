#!/usr/bin/env bash

NAME="bdpurge"
CODENAME="bdpurge"
COPYRIGHT="Copyright (C) 2016 Nathan Shearer"
LICENSE="GNU General Public License 2.0"
VERSION="1.0.0.0"

# \brief Ensures dependencies are present
# \param $@ The dependencies to check for
function bdpurge_check_dependencies
{
	for TOOL in "$@"; do
		if ! type "$TOOL" >/dev/null 2>/dev/null; then
			echo "$CODENAME: \"$TOOL\" is required for this application to work correctly." >&2
			exit
		fi
	done
}

# \brief Erases data on a block device
# \param $1 The device
# \param $2 The amount of data to erase at both ends of the device
function bdpurge_erase
{
	local DEVICE="$1"
	local PURGE_SIZE="$2"
	
	local DEVICE_SIZE=$(blockdev --getsize64 "$DEVICE")
	
	if [ $(($PURGE_SIZE*2)) -ge "$DEVICE_SIZE" ]; then
		$PRETEND dd if=/dev/zero bs=512 count=$(($DEVICE_SIZE/512)) of="$DEVICE"
	else
		$PRETEND dd if=/dev/zero bs=512 count=$(($PURGE_SIZE/512)) of="$DEVICE"
		$PRETEND dd if=/dev/zero bs=512 count=$(($PURGE_SIZE/512)) of="$DEVICE" seek=$(($(($DEVICE_SIZE/512))-$(($PURGE_SIZE/512))))
	fi
}

# \brief Displays the help and exits the program
function bdpurge_help
{
	#     01234567890123456789012345678901234567890123456789012345678901234567890123456789
	echo "Description:"
	echo "  Erase a block device"
	echo
	echo "Usage:"
	echo "  $CODENAME [options] BLOCK_DEVICE"
	echo
	echo "Options:"
	echo "  -h, --help"
	echo "    Display this help message and exit."
	echo "  -n N"
	echo "    Sets the niceness to N (default 0)."
	echo "  -p, --pretend"
	echo "    Performs a dry run and prints out what purge commands would be performed."
	echo "    Data is not actually purged."
	echo "  -r, --recursive"
	echo "    Purge each partition before purging the entire block device."
	echo "  -s, --size 16777216"
	echo "    The amount of data to erase at both ends of the block device."
	echo
	echo "Examples:"
	echo "  $CODENAME -r -p /dev/disk/by-id/ata-ST8000AS0002-1NA17Z_00000000"
	echo
	echo "Version:"
	echo "  $NAME $VERSION"
	echo "  $COPYRIGHT"
	echo "  Licensed under $LICENSE"
	exit;
}

# \brief Erases data on a block device
# \param $1 The device
function bdpurge_main
{
	local DEVICE="$1"
	
	if [ ! -b "$DEVICE" ]; then
		echo "error: \"$DEVICE\" is not a block device"
		return 1
	fi
	if mount | grep "$DEVICE" >/dev/null; then
		echo "error: \"$DEVICE\" is currently mounted"
		return 2
	fi
	
	local DEVICE_MODEL=$(hdparm -I "$DEVICE" 2>/dev/null | grep --text 'Model Number' | cut -d ':' -f 2 | sed -r -e 's/ *(.*?) */\1/')
	local DEVICE_SERIAL=$(hdparm -I "$DEVICE" 2>/dev/null | grep --text 'Serial Number' | cut -d ':' -f 2 | sed -r -e 's/ *(.*?) */\1/')
	local DEVICE_SIZE=$(blockdev --getsize64 "$DEVICE")
	
	echo "Erasing the first and last $PURGE_SIZE bytes on:"
	echo "  Device: $DEVICE"
	if [ "$DEVICE_MODEL" != "" ]; then
		echo "  Model Number: $DEVICE_MODEL"
	fi
	if [ "$DEVICE_SERIAL" != "" ]; then
		echo "  Serial Number: $DEVICE_SERIAL"
	fi
	echo "  Size: $DEVICE_SIZE Bytes"
	echo "Press CTRL+C to cancel"
	for SECONDS in `seq 10 -1 1`; do
		printf "\r${SECONDS} ... "
		sleep 1
	done
	printf "\r0 ... \n"
	
	if $RECURSIVE; then
		for PARTITION in "$DEVICE"[0-9]*; do
			if [ "$PARTITION"='$DEVICE[0-9]*' ]; then continue; fi
			bdpurge_erase "$PARTITION" "$PURGE_SIZE"
		done
	fi
	bdpurge_erase "$DEVICE" "$PURGE_SIZE"
	$PRETEND partprobe "$DEVICE"
}

#------------------------------------------------------------------------------
# default configuration
#
NICE=0
PRETEND=""
PURGE_SIZE=16777216
RECURSIVE=false

#------------------------------------------------------------------------------
# config files
#
if [ -r /etc/$CODENAME.conf ]; then
	. /etc/$CODENAME.conf
fi
if [ -r ~/.$CODENAME.conf ]; then
	. ~/.$CODENAME.conf
fi

#------------------------------------------------------------------------------
# command line arguments
#

if [ $# -eq 0 ]; then
	bdpurge_help
	exit 1
fi

THIS="$0"
while [ $# -ne 0 ]; do
	case "$1" in
		"-h"|"--help")
			bdpurge_help
			exit
			;;
		"-n")
			NICE="$2"
			shift 2
			;;
		"-p"|"--pretend")
			PRETEND="echo "
			shift
			;;
		"-r"|"--recursive")
			RECURSIVE=true
			shift
			;;
		"-s"|"--size")
			PURGE_SIZE="$2"
			if [ $(($(($PURGE_SIZE/512))*512)) -ne "$PURGE_SIZE" ]; then
				PURGE_SIZE=$(($(($PURGE_SIZE/512))*512))
				echo "warning: The purge size is not a multiple of 512, rounding down from $2 to $PURGE_SIZE" 
			fi
			shift 2
			;;
		*)
			break;;
	esac
done

if [ $# -eq 0 ]; then
	echo "error: Missing BLOCK_DEVICE argument."
	exit 1
fi
if [ $# -gt 1 ]; then
	bdpurge_help
	exit 1
fi
DEVICE="$1"

#------------------------------------------------------------------------------
# prepare environment

bdpurge_check_dependencies blockdev dd partprobe sleep
renice $NICE $$ >/dev/null

#------------------------------------------------------------------------------
# begin execution

bdpurge_main "$1"
