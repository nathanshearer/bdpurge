#!/usr/bin/env bash

NAME="bdpurge"
CODENAME="bdpurge"
COPYRIGHT="Copyright (C) 2016 Nathan Shearer"
LICENSE="GNU General Public License 2.0"
VERSION="0.0.0.0"

# \brief Ensures dependencies are present
# \param $@ The dependencies to check for
function bdpurge_check_dependencies
{
	for TOOL in "$@"; do
		if ! type "$TOOL" >/dev/null 2>/dev/null; then
			echo "$CODENAME: \"$TOOL\" is required for this application to work correctly." >&2
			exit
		fi
	done
}

# \brief Displays the help and exits the program
function bdpurge_help
{
	#     01234567890123456789012345678901234567890123456789012345678901234567890123456789
	echo "Synopsis:"
	echo "  Erase a block device"
	echo
	echo "Usage:"
	echo "  $CODENAME [options] BLOCK_DEVICE"
	echo
	echo "Options:"
	echo "  -h, --help"
	echo "    Display this help message and exit."
	echo "  -n N"
	echo "    Sets the niceness to N (default 0)."
	echo
	echo "Examples:"
	echo "  $CODENAME /dev/disk/by-id/ata-ST8000AS0002-1NA17Z_00000000"
	echo
	echo "Version:"
	echo "  $NAME $VERSION"
	echo "  $COPYRIGHT"
	echo "  Licensed under $LICENSE"
	exit;
}

# \brief Erases data on a block device
# \param $1 The mode: quick or full
# \param $2 The device
function bdpurge_main
{
	local MODE="$1"
	local DEVICE="$2"
	
	if [ ! -b "$DEVICE" ]; then
		echo "error: \"$DEVICE\" is not a block device"
		return 1
	fi
	if mount | grep "$DEVICE" >/dev/null; then
		echo "error: \"$DEVICE\" is currently mounted"
		return 2
	fi
	local DEVICE_MODEL=$(hdparm -I "$DEVICE" 2>/dev/null | grep --text 'Model Number' | cut -d ':' -f 2 | sed -r -e 's/ *(.*?) */\1/')
	local DEVICE_SERIAL=$(hdparm -I "$DEVICE" 2>/dev/null | grep --text 'Serial Number' | cut -d ':' -f 2 | sed -r -e 's/ *(.*?) */\1/')
	local DEVICE_SIZE=$(blockdev --getsize64 "$DEVICE")
	local DEVICE_BLOCKS=$(($DEVICE_SIZE / 512))
	
	if [ "$MODE" = "quick" ]; then
		echo "Erasing the first and last 16MiB on:"
		echo "  Device: $DEVICE"
		if [ "$DEVICE_MODEL" != "" ]; then
			echo "  Model Number: $DEVICE_MODEL"
		fi
		if [ "$DEVICE_SERIAL" != "" ]; then
			echo "  Serial Number: $DEVICE_SERIAL"
		fi
		echo "  Size: $DEVICE_SIZE Bytes"
		echo "Press CTRL+C to cancel"
		for SECONDS in `seq 10 -1 1`; do
			printf "\r${SECONDS} ... "
			sleep 1
		done
		printf "\r0 ... \n"
		
		dd if=/dev/zero bs=512 count=2048 of="$DEVICE"
		dd if=/dev/zero bs=512 count=2048 of="$DEVICE" seek=$(( $DEVICE_BLOCKS - 2048 ))
	elif [ "$MODE" = "full" ]; then
		echo "full mode not implemented"
		return 2		
	else
		echo "Unknown mode: \"$MODE\""
		return 1
	fi
}

#------------------------------------------------------------------------------
# default configuration
#
NICE=0

#------------------------------------------------------------------------------
# config files
#
if [ -r /etc/$CODENAME.conf ]; then
	. /etc/$CODENAME.conf
fi
if [ -r ~/.$CODENAME.conf ]; then
	. ~/.$CODENAME.conf
fi

#------------------------------------------------------------------------------
# command line arguments
#

if [ $# -eq 0 ]; then
	bdpurge_help
	exit 1
fi

THIS="$0"
while [ $# -ne 0 ]; do
	case "$1" in
		"-h"|"--help")
			bdpurge_help
			exit
			;;
		"-n")
			NICE="$2"
			shift 2
			;;
		*)
			break;;
	esac
done

if [ $# -eq 0 ]; then
	echo "error: Missing BLOCK_DEVICE argument."
	exit 1
fi
if [ $# -gt 1 ]; then
	bdbusy_help
	exit 1
fi
DEVICE="$1"

#------------------------------------------------------------------------------
# prepare environment

bdpurge_check_dependencies blockdev dd sleep
renice $NICE $$ >/dev/null

#------------------------------------------------------------------------------
# begin execution

bdpurge_main quick "$1"
